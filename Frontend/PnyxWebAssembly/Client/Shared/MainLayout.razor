@using Microsoft.AspNetCore.Components.WebAssembly.Authentication

@inject NavigationManager _navigation
@inject SignOutSessionStateManager _signOutManager

@inherits LayoutComponentBase

<MudThemeProvider />

<MudLayout>
    <MudAppBar Elevation="1">
        <MudText Typo="Typo.h5" Class="ml-3">PNYX</MudText>
        <MudSpacer />
        <AuthorizeView>
            <Authorized>
                @* ReSharper disable once Html.PathError *@
                <MudText Typo="Typo.caption" Class="ml-3"><a href="authentication/profile" style="color: white">@context.User.Identity?.Name</a></MudText>
                <MudIconButton Icon="@Icons.Filled.Lock" Color="Color.Inherit" Edge="Edge.End" @onclick="BeginSignOut" Title="Logout"/>
            </Authorized>
            <NotAuthorized>
                <MudIconButton Icon="@Icons.Filled.Add" Color="Color.Inherit" Edge="Edge.End" @onclick="BeginRegister" Title="Register"/>
                <MudIconButton Icon="@Icons.Filled.LockOpen" Color="Color.Inherit" Edge="Edge.End" @onclick="BeginSignIn" Title="Login" />
            </NotAuthorized>
        </AuthorizeView>
    </MudAppBar>
    <MudMainContent>
        @Body
    </MudMainContent>
</MudLayout>

@code
{
    private async Task BeginSignOut(MouseEventArgs args)
    {
        await _signOutManager.SetSignOutState();
        _navigation.NavigateTo("authentication/logout");
    }

    private void BeginSignIn(MouseEventArgs arg)
    {
        _navigation.NavigateTo("authentication/login");
    }

    private void BeginRegister(MouseEventArgs arg)
    {
        _navigation.NavigateTo("authentication/register");
    }
}
